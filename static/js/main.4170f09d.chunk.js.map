{"version":3,"sources":["actions.js","components/delDialogue.js","components/Homepage.js","components/LoginPage.js","components/location.js","components/CharacterPage.js","components/Episodes.js","components/DialogueBox.js","components/addChar.js","App.js","reducers/loginReducer.js","reducers/charReducer.js","reducers/episodesReducer.js","reducers/locationReducer.js","reducers/rootReducer.js","store.js","index.js"],"names":["getlist","page","a","axios","get","response","data","results","DelDialogue","show","title","description","setShow","name","dispatch","useDispatch","className","onClick","e","preventDefault","type","payload","id","delhandler","configs","require","HomePage","props","perpage","elements_per_page","loginstate","useSelector","state","login__state","greeting","Date","getHours","charstate","char__state","useState","search","setsearch","pageid","setPageid","delName","setDelName","species_dropdown","species","setSpecies","status_dropdown","status","setStatus","sort_checkbox","sorting","setSorting","charlist","Object","values","React","useEffect","length","list","lastpage","varpage","newresult","flags","l","i","push","forEach","Id","console","log","Ascending_list","sort","b","toLowerCase","to","history","placeholder","onChange","target","value","finallist","_","isEmpty","temp","filter","val","finalised","reverse","slice","map","e0","pageCount","pageRangeDisplayed","marginPagesDisplayed","initialPage","onPageChange","pageIndex","selected","containerClassName","errorMsg","loading","ShowData","includes","toLocaleLowerCase","LoginPage","email","setEmail","password","setPassword","setName","nameError","setnameError","emailError","setemailError","pwdError","setpwdError","regex_name","regex_email","regex_pwd","namevalidator","test","emailvalidator","pwdvalidator","onSubmit","loggedin","handleSubmit","onBlur","onFocus","disabled","Location","loc_link","locstate","location__state","link","Link","trigger","dimension","residents","setTrigger","children","CharacterPage","charname","match","params","buttonPopup","setbuttonPopup","char_data","gender","origin","url","episode","src","image","widht","height","alt","Episodes","episode__state","two","three","requestOne","requestTwo","requestThree","Promise","all","then","spread","responseOne","responseTwo","responesThree","epilist","error","air_date","characters","DialogueBox","Addchar","characterstate","characterlist","setUrl","setGender","location","setLocation","episodeNum","setepisodeNum","photoError","setphotoError","locError","setlocError","setTitle","desc","setDesc","photovalidator","locvalidator","submitHandler","pattern","App","path","exact","component","default_state","loginReducer","action","charReducer","newstate","episodesReducer","locationReducer","appReducer","combineReducers","rootReducer","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4170f09d.chunk.js","sourcesContent":["import axios from \"axios\";\nasync function getlist(page) {\n  const response = await axios.get(\n    `https://rickandmortyapi.com/api/character/?page=${page}`\n  );\n  return response.data.results;\n}\n\nexport const getCharacterList = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: \"charLoading\",\n    });\n    let list = [];\n    let lastpage = 34; //update\n    let varpage = 1;\n    for (varpage = 1; varpage <= lastpage; varpage++) {\n      const newresult = await getlist(varpage);\n      list = [...list, ...newresult];\n    }\n\n    let flags = [],\n      charlist = [],\n      l = list.length,\n      i;\n    for (i = 0; i < l; i++) {\n      if (flags[list[i].name]) continue;\n      flags[list[i].name] = true;\n      charlist.push(list[i]);\n    }\n\n    charlist.forEach((e) => {\n      dispatch({\n        type: \"charLoaded\",\n        payload: e,\n        Id: e.name,\n      });\n    });\n  } catch (e) {\n    console.log(e);\n    dispatch({\n      type: \"charFailed\",\n    });\n  }\n};\n\nexport const getEpisodes = () =>async dispatch => {\n  try{\n      dispatch({\n          type: \"EpisodeLoading\"\n      })\n      // const perPage = 10;\n      // const offset  = page*perPage - perPage;\n      // const list1 = await axios.get(\"https://rickandmortyapi.com/api/episode?page=1\");\n      let one =\"https://rickandmortyapi.com/api/episode?page=1\"\n      let two = \"https://rickandmortyapi.com/api/episode?page=2\"\n      let three = \"https://rickandmortyapi.com/api/episode?page=3\"\n      \n      const requestOne = await axios.get(one);\n      const requestTwo = await axios.get(two);\n      const requestThree = await axios.get(three);\n      const epilist = await Promise.all([requestOne, requestTwo, requestThree])\n      .then(\n          axios.spread    ((...responses) => {\n              const responseOne = responses[0];\n              const responseTwo = responses[1];\n              const responesThree = responses[2];\n        const epilist = [...responseOne.data.results, ...responseTwo.data.results, ...responesThree.data.results];\n        return epilist\n      })\n\n          // function([resultone, resulttwo, resultthree]){\n          //     return [...resultone,...resulttwo,...resultthree]\n          // }\n       )\n\n      dispatch({\n          type: \"EpisodeLoaded\",\n          payload: epilist,\n      })\n\n  }\n  catch(e){\n      console.log(\"catch error\");\n      dispatch({\n          type: \"EpisodeFailed\"\n      })\n  }\n};\n\n\nexport const getLocation = (link) =>async dispatch => {\n  try{\n      dispatch({\n          type: \"LocationLoading\"\n      })\n      // const perPage = 10;\n      // const offset  = page*perPage - perPage;\n      const list = await axios.get(link);\n             \n      dispatch({\n          type: \"locationLoaded\",\n          payload: list.data,\n          Link: link\n      })\n\n  }\n  catch(e){\n      console.log(\"catch error\");\n      dispatch({\n          type: \"locationFailed\"\n      })\n  }\n\n\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport \"./delDialogue.css\";\n\n\nexport default function DelDialogue({\n  show,\n  title,\n  description,\n  setShow,\n  name,\n}) {\n  const dispatch = useDispatch();\n\n  if (!show) {\n    return <></>;\n  }\n\n  const delhandler = (e) => {\n    e.preventDefault();\n    dispatch({ type: \"charDeleted\", payload: { id: name } });\n    setShow(false);\n  };\n  return (\n    <div className=\"overlay\">\n      <div className=\"dialog\">\n        <div className=\"dialog__content\">\n          <h2 className=\"dialog__title\">{title}</h2>\n          <span className=\"dialog__description\">{description}</span>\n        </div>\n        <hr />\n        <div className=\"dialog__footer\">\n          <button className=\"dialog__confirm\" onClick={(e) => delhandler(e)}>\n            Delete\n          </button>\n          <button className=\"dialog__confirm\" onClick={() => setShow(false)}>\n            Cancel\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./HomePage.css\";\nimport { getCharacterList } from \"../actions\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport DelDialogue from \"./delDialogue\";\nconst configs = require(\"../configs.json\");\n\nconst HomePage = (props) => {\n  const perpage = configs.elements_per_page;\n  const loginstate = useSelector((state) => state.login__state);\n  const greeting = new Date().getHours();\n  const dispatch = useDispatch();\n  const charstate = useSelector((state) => state.char__state);\n  const [search, setsearch] = useState(\"\");\n  const [pageid, setPageid] = useState(1);\n\n  const [show, setShow] = useState(false);\n  const [delName, setDelName] = useState(\"\");\n\n  const [species, setSpecies] = useState(charstate.species_dropdown);\n  const [status, setStatus] = useState(charstate.status_dropdown);\n\n  const [sorting, setSorting] = useState(charstate.sort_checkbox);\n\n  let charlist = Object.values(charstate.data);\n  React.useEffect(() => {\n    if (charlist.length === 0) dispatch(getCharacterList());\n  }, []);\n\n  function Ascendingcompare(a, b) {\n    if (a.name.toLowerCase() < b.name.toLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLowerCase() > b.name.toLowerCase()) {\n      return 1;\n    }\n    return 0;\n  }\n  let Ascending_list = charlist.sort(Ascendingcompare);\n  const logouthandler = () => {\n    dispatch({\n      type: \"logout\"\n    });\n    props.history.push(\"/login\");\n    dispatch({\n      type: \"logout__done\",\n    });\n  };\n  const ShowData = (finallist) => {\n    if (!_.isEmpty(finallist)) {\n      let temp = finallist;\n\n      if (species === \"alien\") {\n        finallist = finallist.filter((val) => {\n          if (val.species.toLowerCase() === \"alien\") return val;\n          else return false;\n        });\n      } else if (species === \"human\") {\n        finallist = finallist.filter((val) => {\n          if (val.species.toLowerCase() === \"human\") return val;\n          else return false;\n        });\n      }\n\n      if (status === \"alive\") {\n        finallist = finallist.filter((val) => {\n          if (val.status.toLowerCase() === \"alive\") return val;\n          else return false;\n        });\n      } else if (status === \"dead\") {\n        finallist = finallist.filter((val) => {\n          if (val.status.toLowerCase() === \"dead\") return val;\n          else return false;\n        });\n      }\n\n      let finalised = sorting === \"A-Z\" ? finallist : temp.reverse();\n      return (\n        <div className=\"listbox\">\n          <div className={\"list-wrapper\"}>\n            <div className={\"Headings\"}>\n              <span className={\"Name\"}>Name of Character</span>\n              <span className={\"Details\"}>Operations</span>\n            </div>\n\n            {finalised\n              .slice((pageid - 1) * perpage, pageid * perpage)\n              .map((e0) => {\n                return (\n                  <div key={e0.id} className={\"person-item\"}>\n                    <p>{e0.name}</p>\n                    <div className=\"detailsdelete\">\n                      <Link to={`/char/${e0.name}`}>Details</Link>\n                      <button\n                        className=\"del_btn\"\n                        onClick={() => {\n                          setShow(!show);\n                          setDelName(e0.name);\n                        }}\n                      >\n                        Delete{\" \"}\n                      </button>\n                    </div>\n                  </div>\n                );\n              })}\n            <ReactPaginate\n              pageCount={finallist.length / perpage}\n              pageRangeDisplayed={2}\n              marginPagesDisplayed={1}\n              initialPage={0}\n              onPageChange={(pageIndex) => {\n                setPageid(pageIndex.selected + 1);\n              }}\n              containerClassName={\"pagination\"}\n            />\n          </div>\n          <div className=\"filter\">\n            {/* human||alien */}\n            <label>Species</label>\n            <select\n              value={species}\n              onChange={(e) => {\n                setSpecies(e.target.value);\n                dispatch({\n                  type: \"filterUpdate\",\n                  payload: {\n                    species: e.target.value,\n                    status:status,\n                    sort: sorting,\n                  },\n                });\n              }}\n            >\n              <option value=\"human\">human</option>\n              <option value=\"alien\">alien</option>\n              <option value=\"all\">all</option>\n            </select>\n\n            <label>Status</label>\n            <select\n              value={status}\n              onChange={(e) => {\n                setStatus(e.target.value);\n                dispatch({\n                  type: \"filterUpdate\",\n                  payload: {\n                    species:species,\n                    status: e.target.value,\n                    sort: sorting,\n                  },\n                });\n              }}\n            >\n              <option value=\"all\">all</option>\n              <option value=\"alive\">alive</option>\n              <option value=\"dead\">dead</option>\n            </select>\n          </div>\n        </div>\n      );\n    }\n    if (charstate.errorMsg !== \"\") {\n      return <p>{charstate.errorMsg}</p>;\n    }\n    if (charstate.loading) {\n      return <p>......loading......</p>;\n    }\n    return <span className={\"nochar\"}>No Such Character Available</span>;\n  };\n\n  return (\n    <div className=\"HomePage\">\n      <nav>\n        <div className=\"rightnav\">\n          <NavLink to={\"/episodes\"}>Episodes</NavLink>\n          <NavLink to={\"/addchar\"}>Add Character</NavLink>\n          <button onClick={() => logouthandler()}>Logout</button>\n        </div>\n      </nav>\n\n      <div className=\"Namebar\">\n        Welcome {loginstate.data.name}!<br></br>\n        <div className=\"greeting\">\n          {greeting >= 12\n            ? greeting >= 16\n              ? \"Good Evening\"\n              : \"Good Afternoon\"\n            : \"Good Morning\"}\n        </div>\n      </div>\n\n      {/* Search Wrapper */}\n      <div className=\"search-wrapper\">\n        <input\n          type=\"text\"\n          placeholder={\"Search name\"}\n          onChange={(e) => setsearch(e.target.value)}\n        ></input>\n      </div>\n\n      {/* Sorting */}\n      <div className=\"sortlabel\">\n        <label>Sort by : </label>\n        <select\n          value={sorting}\n          onChange={(e) => {\n            setSorting(e.target.value);\n            dispatch({\n              type: \"filterUpdate\",\n              payload: {\n                species:species,\n                status:status,\n                sort: e.target.value,\n              },\n            });\n          }}\n        >\n          <option value=\"A-Z\">A-Z</option>\n          <option value=\"Z-A\">Z-A</option>\n        </select>\n      </div>\n\n      {/* Show Data */}\n      {ShowData(\n        Ascending_list.filter((val) => {\n          if (search === \"\") {\n            return val;\n          } else if (\n            val.name.toLowerCase().includes(search.toLocaleLowerCase())\n          ) {\n            return val;\n          }\n          return false;\n        })\n      )}\n\n      <DelDialogue\n        show={show}\n        title={\"Delete this item\"}\n        description={\"you will not be able to access this anymore\"}\n        setShow={setShow}\n        name={delName}\n      ></DelDialogue>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport { useDispatch } from \"react-redux\";\n\nconst LoginPage = (props) => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [nameError, setnameError] = useState(\"\");\n  const [emailError, setemailError] = useState(\"\");\n  const [pwdError, setpwdError] = useState(\"\");\n  // var regex_name = /^[a-zA-Z]*/;\n  var regex_name = /^[A-Za-z0-9_]{6,20}$/\n  var regex_email= /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  var regex_pwd= /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if(name === \"\")\n    {\n      namevalidator();\n      return;\n    }\n    if(email === \"\")\n    {\n      emailvalidator();\n      return;\n    }\n    if(password === \"\")\n    {\n      pwdvalidator();\n      return;\n    }\n    try {\n      dispatch({\n        type: \"login__done\",\n        payload: {\n          name: name,\n          email: email,\n          password: password,\n          loggedin: true,\n        },\n      });\n\n      props.history.push(\"/home\");\n    } catch { \n      dispatch({\n        type: \"login__failed\",\n        payload: { loggedin: false },\n      });\n    }\n  };\n\n  const namevalidator = () => {\n    if(name === \"\"){\n      setnameError(\"Name field should not be empty\")\n      return;\n    }\n    else if (!regex_name.test(name)) {\n      setnameError(\"Name should contain min 6 , max 20 letters\");\n      return;\n    }\n    else \n      setnameError(\"\");\n  };\n\n  const emailvalidator = () => {\n    if(email === \"\"){\n      setemailError(\"Email field should not be empty\")\n      return;\n    }\n    else if (!regex_email.test(email)) {\n      setemailError(\"It should be in valid email format\");\n      return;\n    }\n    else \n      setemailError(\"\");\n  };\n\n  const pwdvalidator = () => {\n    if(password === \"\"){\n      setpwdError(\"Password field should not be empty\")\n      return;\n    }\n    else if (!regex_pwd.test(password)) {\n      setpwdError(\"Password should contain minimum 8 characters, at least one letter,one number and one  special character.\");\n      return;\n    }\n    else \n      setpwdError(\"\");\n  };\n\n  return (\n    <div className=\"bg\">\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <form onSubmit={(e) => handleSubmit(e)}>\n            <h3>Sign In</h3>\n            <div className=\"form-group\">\n              <label>User Name</label>\n              <input\n                type=\"name\"\n                className=\"form-control\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                onBlur={() => namevalidator()}\n                onFocus={() => setnameError(\"\")}\n              />\n              {nameError !== \"\" ? (\n                <span className=\"error\">{nameError}</span>\n              ) : (\n                <></>\n              )}\n            </div>\n            <div className=\"form-group\">\n              <label>Email address</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder={\"Enter email\"}\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                onBlur={() => emailvalidator()}\n                onFocus={() => setemailError(\"\")}\n              />\n              {emailError !== \"\" ? (\n                <span className=\"error\">{emailError}</span>\n              ) : (\n                <></>\n              )}\n            </div>\n\n            <div className=\"form-group\">\n              <label>Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Enter password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                onBlur={() => pwdvalidator()}\n                onFocus={() => setpwdError(\"\")}\n              />\n               {pwdError !== \"\" ? (\n                <span className=\"error\">{pwdError}</span>\n              ) : (\n                <></>\n              )}\n            </div>\n           \n\n            <button type=\"submit\" className=\"btn btn-primary btn-block\"  disabled={(nameError !== \"\" || emailError !== \"\" || pwdError !== \"\")?true:false}>\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React from \"react\";\nimport \"./location.css\";\nimport { getLocation } from \"../actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport _ from \"lodash\";\n\nfunction Location(props) {\n  const loc_link = props.loc_link;\n  const dispatch = useDispatch();\n  const locstate = useSelector((state) => state.location__state);\n  React.useEffect(() => {\n    dispatch(getLocation(loc_link));\n  }, []);\n\n  const ShowData = () => {\n    if (locstate.loading) {\n      return <p>.....loading.....</p>;\n    }\n\n    if (!_.isEmpty(locstate.data[loc_link])) {\n      return (\n        <div className={\"results\"}>\n          <span className=\"label\">location name - </span>\n          <span className=\"result\">{locstate.data[loc_link].name}</span>\n          <br></br>\n          <span className=\"label\">location type - </span>\n          <span className=\"result\">{locstate.data[loc_link].type}</span>\n          <br></br>\n          <span className=\"label\">location dimension - </span>{\" \"}\n          <span className=\"result\">{locstate.data[loc_link].dimension}</span>\n          <br></br>\n          <span className=\"label\">no of residents - </span>\n          <span className=\"result\">\n            {locstate.data[loc_link].residents.length}\n          </span>\n        </div>\n      );\n    }\n    if (locstate.errorMsg !== \"\") {\n      return <p>{locstate.errorMsg}</p>;\n    }\n\n    return <p>error getting charecter </p>;\n  };\n  console.log(props);\n  return props.trigger ? (\n    <div className={\"popup\"}>\n      <div className={\"popup-inner\"}>\n        {ShowData(loc_link)}\n\n        <button className={\"close_btn\"} onClick={() => props.setTrigger(false)}>\n          X\n        </button>\n        {props.children}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Location;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport _ from \"lodash\";\nimport { useState } from \"react\";\nimport \"./CharacterPage.css\";\nimport Location from \"./location\";\n\nconst CharacterPage = (props) => {\n  const charname = props.match.params.name;\n  const [buttonPopup, setbuttonPopup] = useState(false);\n  const charstate = useSelector((state) => state.char__state);\n  const char_data = charstate.data[charname];\n\n  const ShowData = () => {\n    if (_.isEmpty(char_data)) {\n      return <span className=\"nochar\">Character not available</span>;\n    }\n\n    return (\n      <div className=\"divisions\">\n        <div className=\"left\">\n          <div className=\"first\">\n            <div className=\"Gender\">\n              <span className=\"label\">Gender : </span>{\" \"}\n              <span className=\"result\">{char_data.gender}</span>\n            </div>\n            <div className=\"Species\">\n              <span className=\"label\">Species : </span>{\" \"}\n              <span className=\"result\">{char_data.species}</span>\n            </div>\n            <div className=\"Status\">\n              <span className=\"label\">Status : </span>{\" \"}\n              <span className=\"result\">{char_data.status}</span>\n            </div>\n            <div className=\"Location\">\n              <span className=\"label\">Location : </span>{\" \"}\n              {/* <span className=\"result\">{char_data.origin.name}</span> */}\n              <button\n                className=\"result\"\n                onClick={() => setbuttonPopup(!buttonPopup)}\n              >\n                {char_data.origin.name}\n              </button>\n            </div>\n            <Location\n              trigger={buttonPopup}\n              setTrigger={setbuttonPopup}\n              loc_link={char_data.origin.url}\n            ></Location>\n          </div>\n          <div className=\"second\">\n            <div className=\"Noofepi\">\n              <span className=\"label\">\n                Number of episodes in which charecter appeared :{\" \"}\n              </span>{\" \"}\n              <span className=\"result\">{char_data.episode.length}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"right\">\n          <img src= {char_data.image } widht =\"300\" height=\"300\" alt=\"\"></img>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={\"characterpage\"}>\n      <button className=\"Home_btn\" onClick={() => props.history.push(\"/home\")}>\n        {\"<--\"} Home\n      </button>\n      <span className=\"Name\">{char_data.name}</span>\n\n      {ShowData()}\n    </div>\n  );\n};\n\nexport default CharacterPage;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getEpisodes } from \"../actions\";\nimport \"./Episodes.css\";\n\nconst Episodes = (props) => {\n  const dispatch = useDispatch();\n  const Episodes = useSelector((state) => state.episode__state);\n  React.useEffect(() => {\n    dispatch(getEpisodes());\n  }, []);\n  console.log(Episodes);\n\n  const ShowData = () => {\n    if (!_.isEmpty(Episodes.data)) {\n      console.log(\"jse cjesj\");\n      return (\n        <div className=\"episodeswrapper\">\n          {Episodes.data.map((e) => {\n            return (\n              <div key={e.episode} className={\"eachepisode\"}>\n                {/* <ul> */}\n                <p>\n                  <span className={\"episodenumber\"}>{e.episode}</span>\n                </p>\n                <p>Name: {e.name}</p>\n                <p>Air-Date : {e.air_date}</p>\n                <p>characters count: {e.characters.length} </p>\n                {/* </ul> */}\n              </div>\n            );\n          })}\n        </div>\n      );\n    }\n    if (Episodes.errorMsg !== \"\") {\n      return <p>{Episodes.error}</p>;\n    }\n    if (Episodes.loading) {\n      return <p>......loading......</p>;\n    }\n    return <p>cant get the data from api</p>;\n  };\n\n  return (\n    <div>\n      <button className=\"Home_btn\" onClick={() => props.history.push(\"/home\")}>\n        {\"<--\"} Home\n      </button>\n      <div>{ShowData()}</div>;\n    </div>\n  );\n};\n\nexport default Episodes;\n","import \"./DialogueBox.css\";\n\nimport React from \"react\";\n\nexport default function DialogueBox({ show, title, description,setShow }) {\n  if (!show) {\n    return <></>;\n  }\n  return (\n    <div className=\"overlay\">\n      <div className=\"dialog\">\n        <div className=\"dialog__content\">\n          <h2 className=\"dialog__title\">{title}</h2>\n          <p className=\"dialog__description\">{description}</p>\n        </div>\n        <hr />\n        <div className=\"dialog__footer\">\n          <button className=\"dialog__confirm\" onClick={()=>setShow(false)}>Continue</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","//import { rest, set } from \"lodash\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./addChar.css\";\nimport DialogueBox from \"./DialogueBox\";\n//import {useForm} from 'react-hook-form'\n// import {getCharacterList} from \"../actions/charListActions\"\n\nconst Addchar = (props) => {\n  const dispatch = useDispatch();\n  const characterstate = useSelector((state) => state.char__state);\n\n  let characterlist = Object.values(characterstate.data);\n\n  const [name, setName] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [gender, setGender] = useState(\"Male\");\n  const [location, setLocation] = useState(\"\");\n  const [species, setSpecies] = useState(\"Human\");\n  const [status, setStatus] = useState(\"Alive\");\n  const [episodeNum, setepisodeNum] = useState();\n\n  const [nameError, setnameError] = useState(\"\");\n  const [photoError, setphotoError] = useState(\"\");\n  const [locError, setlocError] = useState(\"\");\n\n  const [show, setShow] = useState(false);\n  const [title, setTitle] = useState(\"Title\");\n  const [desc, setDesc] = useState(\"Description\");\n\n  var regex_name = /^[a-zA-Z0-9]+([_ -]?[a-zA-Z0-9])*$/\n\nconst submitHandler=(e)=>{\n  e.preventDefault();\n  if(name === \"\")\n  {\n    namevalidator();\n    return;\n  }\n\n  if(url === \"\"){\n    photovalidator();\n    return;\n  }\n\n  if(location === \"\"){\n    locvalidator();\n    return;\n  }\n  for (let i = 0; i < characterlist.length; i++) {\n    if (characterlist[i].name === name) {\n      setTitle(\"Character Already Added\");\n      setDesc(`${name} is already present in characters`);\n      setShow(true);\n      return;\n    }\n  }\n  dispatch({\n    type: \"charLoaded\",\n    payload: {\n      id: characterlist.length + 1,\n      name: name,\n      status: status,\n      species: species,\n      gender: gender,\n      origin: { name: location, url: \"\" },\n      image: url,\n      episode: { length: episodeNum },\n    },\n    Id: name,\n  });\n  setTitle(\"New Character Added\");\n  setDesc(`${name} is added to characters`);\n  setShow(true);\n}\n\n  const namevalidator = () => {\n    if(name === \"\"){\n      setnameError(\"Name field should not be empty\")\n      return;\n    }\n    else if (!regex_name.test(name)) {\n      setnameError(\"Name should contain min 6 , max 20 letters\");\n      return;\n    }\n    else \n      setnameError(\"\");\n  };\n\n  const photovalidator = () => {\n    if(url === \"\"){\n      setphotoError(\"Photo is required\")\n      return;\n    }\n    else \n      setphotoError(\"\");\n  };\n\n  \n  const locvalidator = () => {\n    if(location === \"\"){\n      setlocError(\"Location is required\")\n      return;\n    }\n    else \n      setlocError(\"\");\n  };\n  \n  return (\n    <div className=\"newcharwrapper\">\n      <button className=\"Home_btn\" onClick={() => props.history.push(\"/home\")}>\n        {\"<--\"} Home\n      </button>\n      <form\n        onSubmit={(e) => \n          submitHandler(e)}\n      >\n        <div className=\"eachlabel\">\n          <label>Name : </label>\n          <div  className = \"error-input\">\n          <input\n            type=\"text\"\n            pattern=\"[a-zA-Z]+*\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            onBlur={() => namevalidator()}\n            onFocus={() => setnameError(\"\")}\n          />\n           {nameError !== \"\" ? (<span className=\"error-add\">{nameError}</span> ) : (<></>)}\n           </div>\n        </div>\n        \n        \n        <div className=\"eachlabel\">\n          <label>Photo url : </label>\n          <div className = \"error-input\">\n          <input\n            type=\"input\"\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n            onBlur={() => photovalidator()}\n            onFocus={() => setphotoError(\"\")}\n          />\n          {photoError !== \"\" ? (<span className=\"error-add\">{photoError}</span> ) : (<></>)}\n          </div>\n        </div>\n\n        <div className=\"eachlabel\">\n          <label>Gender : </label>\n          <select onChange={(e) => setGender(e.target.value)}>\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n            <option value=\"Unknown\">Unknown</option>\n          </select>\n        </div>\n\n        <div className=\"eachlabel\">\n          <label>Location : </label>\n          <div  className = \"error-input\">\n          <input\n            type=\"text\"\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            onBlur={() => locvalidator()}\n            onFocus={() => setlocError(\"\")}\n          />\n          <br/>\n          {locError !== \"\" ? (<span className=\"error-add\">{locError}</span> ) : (<></>)}\n          </div>\n        </div>\n\n        \n\n        <div className=\"eachlabel\">\n          <label>Species : </label>\n          <select onChange={(e) => setSpecies(e.target.value)}>\n            <option value=\"Human\">Human</option>\n            <option value=\"Alien\">Alien</option>\n            <option value=\"Unknown\">Unknown</option>\n          </select>\n        </div>\n\n        <div className=\"eachlabel\">\n          <label>Status : </label>\n          <select onChange={(e) => setStatus(e.target.value)}>\n            <option value=\"Alive\">Alive</option>\n            <option value=\"Dead\">Dead</option>\n            <option value=\"Unknown\">Unknown</option>\n          </select>\n        </div>\n\n        <div className=\"eachlabel\">\n          <label>Number of episodes character involved : </label>\n          <input\n            type=\"number\"\n            value={episodeNum}\n            onChange={(e) => setepisodeNum(e.target.value)}\n          />\n        </div>\n\n        <div className={\"addcharbutton\"}>\n          <button className=\"submit-btn\" type=\"submit\" disabled={(nameError !== \"\" || photoError !== \"\" || locError !== \"\")?true:false}>Add Character</button>\n        </div>\n      </form>\n\n      <DialogueBox\n        show={show}\n        title={title}\n        description={desc}\n        setShow={setShow}\n      ></DialogueBox>\n    </div>\n  );\n};\n\nexport default Addchar;\n","import \"./App.css\";\nimport { Route, Redirect, Switch, BrowserRouter } from \"react-router-dom\";\nimport HomePage from \"./components/Homepage\";\nimport LoginPage from \"./components/LoginPage\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useSelector } from \"react-redux\";\nimport CharacterPage from \"./components/CharacterPage\";\nimport Episodes from \"./components/Episodes\";\nimport Addchar from \"./components/addChar\";\n\nfunction App() {\n  const loginstate = useSelector((state) => state.login__state);\n  \n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route path={\"/login\"} exact component={LoginPage}></Route>\n          {loginstate.data.loggedin && (\n            <Route path={\"/home\"} exact component={HomePage}></Route>\n          )}\n          {loginstate.data.loggedin && (\n            <Route path={\"/char/:name\"} exact component={CharacterPage}></Route>\n          )}\n          {loginstate.data.loggedin && (\n            <Route path={\"/episodes\"} exact component={Episodes}></Route>\n          )}\n          {loginstate.data.loggedin && (\n            <Route path={\"/addchar\"} exact component={Addchar}></Route>\n          )}\n          <Redirect to={\"/login\"} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const default_state = {\n  data: {},\n  errorMsg: \"\",\n  loggedin: false,\n};\n\nconst loginReducer = (state = default_state, action) => {\n  switch (action.type) {\n    case \"login__done\":\n      return {\n        ...state,\n        data: action.payload,\n        loggedin: action.payload.loggedin,\n        errorMsg: \"\",\n      };\n    case \"login__failed\":\n      return {\n        ...state,\n        data: action.payload,\n        errorMsg: \"login failed\",\n      };\n    case \"logout__done\":\n      return {\n        data: \"none\",\n        errorMsg: \"\",\n        loggedin: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","import _ from \"lodash\";\nconst default_state = {\n  loading: false,\n  data: {},\n  errorMsg: \"\",\n  species_dropdown: \"all\",\n  status_dropdown: \"all\",\n  sort_checkbox: \"A-Z\",\n};\n\nconst charReducer = (state = default_state, action) => {\n  switch (action.type) {\n    case \"charLoading\":\n      return {\n        ...state,\n        loading: true,\n        errorMsg: \"\",\n      };\n    case \"charFailed\":\n      return {\n        ...state,\n        loading: false,\n        errorMsg: \"Cant get data of a character\",\n      };\n\n    case \"charLoaded\":\n      return {\n        ...state,\n        loading: false,\n        errorMsg: \"\",\n        data: {\n          ...state.data,\n          [action.Id]: action.payload,\n        },\n      };\n\n    case \"charDeleted\":\n      const newstate = { ...state.data };\n      if (!_.isEmpty(newstate[action.payload.id])) {\n        delete newstate[action.payload.id];\n      }\n      return {\n        ...state,\n        data: newstate,\n        loading: false,\n        errorMsg: \"\",\n      };\n\n    case \"filterUpdate\":\n      return {\n        ...state,\n        species_dropdown: action.payload.species,\n        status_dropdown: action.payload.status,\n        sort_checkbox: action.payload.sort,\n      };\n    case \"logout\":\n      return{\n        ...state,\n        species_dropdown: \"all\",\n        status_dropdown: \"all\",\n        sort_checkbox: \"A-Z\",\n      }\n    case \"Reset\":\n      return {\n        loading: false,\n        data: {},\n        errorMsg: \"\",\n        species_dropdown: \"all\",\n        status_dropdown: \"all\",\n        sort_checkbox: \"A-Z\",\n      };\n    default:\n      return state;\n  }\n};\n\nexport default charReducer;\n","const default_state = {\n  loading: false,\n  data: [],\n  errorMsg: \"\",\n};\nconst episodesReducer = (state = default_state, action) => {\n  switch (action.type) {\n    case \"EpisodeLoading\":\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case \"EpisodeFailed\":\n      return {\n        ...state,\n        loading: false,\n        errorMsg: \"cant get the list data\",\n      };\n\n    case \"EpisodeLoaded\":\n      return {\n        ...state,\n        loading: false,\n        data: action.payload,\n        errorMsg: \"\",\n      };\n    default:\n      return state ;\n  }\n};\n\nexport default episodesReducer;\n","const default_state = {\n    loading: false,\n    data: {},\n    errorMsg: \"\",\n}\n\nconst locationReducer = (state = default_state, action) => {\n    switch(action.type){\n        case \"locationLoading\":\n            return{\n                ...state,\n                loading: true,\n                errorMsg: \"\"\n            }\n        case \"locationFailed\":\n            return{\n               ...state,\n                loading: false,\n                errorMsg: \"Its an unknown location\"\n            }    \n\n            case \"locationLoaded\":\n                return{\n                   ...state,\n                    loading: false,\n                    errorMsg: \"\",\n                    data: {\n                        ...state.data,\n                        [action.Link]: action.payload \n                    }\n                }    \n        default: \n            return state\n    }\n} \n\nexport default locationReducer\n","import { combineReducers } from \"redux\";\nimport loginReducer from \"./loginReducer\";\nimport charReducer from \"./charReducer\";\nimport episodesReducer from \"./episodesReducer\";\nimport locationReducer from \"./locationReducer\";\n\nconst appReducer = combineReducers({\n  login__state: loginReducer,\n  char__state: charReducer,\n  episode__state: episodesReducer,\n  location__state: locationReducer,\n});\n\nconst rootReducer = (state, action) => {\n  //to get everything cleaned after logout\n  // if (action.type === \"logout__done\") {\n  //   return appReducer(undefined, action);\n  // }\n\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport rootReducer from './reducers/rootReducer'\r\nimport thunk from 'redux-thunk'\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n    key: 'primary',\r\n    storage: storage,\r\n    whitelist: ['login__state','char__state','spisode__state','location__state'] // which reducer want to store\r\n  };\r\n\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)))\r\nexport const persistor = persistStore(store);\r\n\r\n// export default {store, persistor};\r\n\r\n// export default ()=>{\r\n//     const store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)))\r\n//     const persistor = persistStore(store);\r\n    \r\n// }\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport {store,persistor} from \"./store\"\nimport {BrowserRouter} from \"react-router-dom\"\nimport {Provider} from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store = {store}>\n        <PersistGate loading ={null} persistor = {persistor}>\n          <App />\n        </PersistGate>    \n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}